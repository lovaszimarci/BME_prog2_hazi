classs 1


FELELŐSSÉGE:

Egy olyan IP csomagot valósít meg amely áthalad egy routeren. A IP_PACKET osztály rendelkezik egy átlag ip csomag statisztikai adataival valamint olyan adatokkal amellyel a router jellemzi (pl: beérkezési időpont, továbbitási időpont)


ATTRIBÚTOMOK:

protected: 

std::string SENDER_IP // a feladó eszköz ip címe
std::string RECIVER_IP // a címzett eszköz ip címe
std::string TIME_RECEIVED // a csomag fogadásának ideje (mindíg az adott napon értendő időt tartalmaz, dátumot nem)
std::string TIME_SEND // a csomag továbbküldésének ideje  
int P_SIZE // a csomag adatának mérete (bit)

METÓDUSOK:

public: 

konstruktor, setterek, getterek (szerintem nem kell kulon destruktor mivel nincs dinamikusan foglalva)


class 2

PRIORITY_IP_PACKET

FELELŐSSÉGE:

Egy olyan IP csomagot valósít meg amely rendelkezik a már meglévő IP_PACKET oszály minden tulajdonságával és még rendelkezik egy fontossági kategória jelzővel is

ŐSOSZTÁLY:
A IP_PACKET osztály leszármazottja.


ATTRIBÚTOMOK:

short PRIORITY_RATING // besorolja az 1-es vagy 2-es prioritási csoportba

METÓDUSOK:

public: konstruktor, getter a priorityre, (destruktor szerintem ide se kell)



class 3


IP_STATISTIC


felelőssége:

Az osztály azért felelős hogy egy adott csomag halmazról statisztikákat hozzon létre. Azért létezik osztályként hogy külön lehessen választani a statisztikai függvényeket a másik függvényektől amik az osztályon kívül vannak és nem a statisztikával vagy az osztályokkal foglalkoznak hanem pl az írás olvasással

attribútomok:

IP_PACKET* packets[]

METÓDUSOK:

GetAvarageBanwidth_SENDER_RECIVER // megmutatja az átlag sávszélességet egy tetszőleges küldő és fogadó fél között

GetAvarageArival_PRIORITY // megmutatja az adott prioritású csomagok átlagos érkezési időközét

GetAvarageBandwidth_ALL // megmutatja az összes csomagból adódó sávszélességet

GetRatio_PRIO_NON_PRIO // megmutatja az átvitt prioritásos csomagok adatmennyiségét az összes adathoz képest




operátor túlterhelés:

az összes csomagból adódó sávszélesség --> mivel az összes csomag szávszélességeinek összege ezért az operator+= túlterhelés egy összegszámhoz adja hozzá a következő elem sávszélességét



